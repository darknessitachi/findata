-- Must use UTF-8 encoding for these tables
CREATE TABLE source (
	id INT UNSIGNED AUTO_INCREMENT,
	class_name VARCHAR(255),
	PRIMARY KEY (id)
);

CREATE TABLE fin_data_updates (
  id INT UNSIGNED AUTO_INCREMENT,
  _date DATE,
  PRIMARY KEY (id)
);

insert into fin_data_updates (_date) values ('2013-01-18');

CREATE TABLE fin_field (
	id INT UNSIGNED AUTO_INCREMENT,
	fin_sheet VARCHAR(255),
	name VARCHAR(255),
	PRIMARY KEY (id),
	UNIQUE (fin_sheet, name)
);

CREATE TABLE share_number_change (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	change_date DATE,
	number_of_shares BIGINT UNSIGNED,
	FOREIGN KEY (stock_id) REFERENCES stock(id),
	UNIQUE (stock_id, change_date),
	PRIMARY KEY (id)
);

CREATE TABLE dividend (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	announcement_date DATE,
	amount FLOAT,
	bonus FLOAT,
	split FLOAT,
	payment_date DATE,
	FOREIGN KEY (stock_id) REFERENCES stock(id),
	UNIQUE (stock_id, announcement_date),
	PRIMARY KEY (id)
);

CREATE TABLE stock (
	id INT UNSIGNED AUTO_INCREMENT,
	code VARCHAR(20),
	name VARCHAR(20),
	current_price FLOAT UNSIGNED DEFAULT 0 NOT NULL,
	number_of_shares FLOAT UNSIGNED DEFAULT 0 NOT NULL,
	latest_year MEDIUMINT UNSIGNED,
	latest_season TINYINT UNSIGNED,
  is_interesting BIT DEFAULT false NOT NULL,
	is_financial BIT DEFAULT false NOT NULL,
	is_ignored BIT DEFAULT false NOT NULL,
	last_updated TIMESTAMP,
	UNIQUE (code),
	PRIMARY KEY (id)
);

CREATE TABLE report_pub_dates (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	fin_date DATE,
	FOREIGN KEY (stock_id) REFERENCES stock(id),
	PRIMARY KEY (id),
	UNIQUE (stock_id, fin_year, fin_season)
);

# CREATE TABLE analysis_field (
# 	id INT UNSIGNED AUTO_INCREMENT,
# 	name VARCHAR(255),
# 	description TEXT,
# 	PRIMARY KEY (id)
# );
#
# CREATE TABLE analysis (
# 	id INT UNSIGNED AUTO_INCREMENT,
# 	stock_id INT UNSIGNED,
# 	fin_year INT UNSIGNED(5),
# 	fin_season INT UNSIGNED(1),
# 	analysis_field_id INT UNSIGNED,
# 	value DOUBLE,
# 	FOREIGN KEY (stock_id) REFERENCES stock(id),
# 	FOREIGN KEY (analysis_field_id) REFERENCES analysis_field(id),
# 	PRIMARY KEY (id),
# 	UNIQUE (stock_id, fin_year, fin_season, analysis_field_id)
# );

CREATE TABLE fin_data (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	source_id INT UNSIGNED,
	fin_field_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	value DOUBLE,
	order_ INT UNSIGNED,
	PRIMARY KEY (id),
	FOREIGN KEY (stock_id) REFERENCES stock(id),
	FOREIGN KEY (source_id) REFERENCES source(id),
	FOREIGN KEY (fin_field_id) REFERENCES fin_field(id),
	UNIQUE (stock_id, fin_year, fin_season, source_id, fin_field_id)
);

CREATE TABLE IF NOT EXISTS stock_price (
	id BIGINT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	open INT UNSIGNED,
	high INT UNSIGNED,
	low INT UNSIGNED,
	close INT UNSIGNED,
	avg INT UNSIGNED,
	adjustment_factor FLOAT,
  ep_last_4_seasons FLOAT,
  ep_l4s_max FLOAT,
  ep_l4s_min FLOAT,
  eb FLOAT,
  eb_max FLOAT,
  eb_min FLOAT,
--	FOREIGN KEY (stock_id) REFERENCES stock(id), -- FOREIGN KEY is not yet supported with PARTITION
	PRIMARY KEY (id, date), -- have to add 'date' into primary key otherwise mysql wont allow partitioning
  INDEX (date),
	UNIQUE (stock_id, date)
)
PARTITION BY RANGE (UNIX_TIMESTAMP(date)) (
PARTITION p00 VALUES LESS THAN (UNIX_TIMESTAMP('1995-01-01 00:00:00')),
PARTITION p01 VALUES LESS THAN (UNIX_TIMESTAMP('1998-01-01 00:00:00')),
PARTITION p02 VALUES LESS THAN (UNIX_TIMESTAMP('1999-01-01 00:00:00')),
PARTITION p03 VALUES LESS THAN (UNIX_TIMESTAMP('2000-01-01 00:00:00')),
PARTITION p04 VALUES LESS THAN (UNIX_TIMESTAMP('2001-01-01 00:00:00')),
PARTITION p05 VALUES LESS THAN (UNIX_TIMESTAMP('2002-01-01 00:00:00')),
PARTITION p06 VALUES LESS THAN (UNIX_TIMESTAMP('2003-01-01 00:00:00')),
PARTITION p07 VALUES LESS THAN (UNIX_TIMESTAMP('2004-01-01 00:00:00')),
PARTITION p08 VALUES LESS THAN (UNIX_TIMESTAMP('2005-01-01 00:00:00')),
PARTITION p09 VALUES LESS THAN (UNIX_TIMESTAMP('2006-01-01 00:00:00')),
PARTITION p10 VALUES LESS THAN (UNIX_TIMESTAMP('2007-01-01 00:00:00')),
PARTITION p11 VALUES LESS THAN (UNIX_TIMESTAMP('2008-01-01 00:00:00')),
PARTITION p12 VALUES LESS THAN (UNIX_TIMESTAMP('2009-01-01 00:00:00')),
PARTITION p13 VALUES LESS THAN (UNIX_TIMESTAMP('2010-01-01 00:00:00')),
PARTITION p14 VALUES LESS THAN (UNIX_TIMESTAMP('2011-01-01 00:00:00')),
PARTITION p15 VALUES LESS THAN (UNIX_TIMESTAMP('2012-01-01 00:00:00')),
PARTITION p16 VALUES LESS THAN (UNIX_TIMESTAMP('2013-01-01 00:00:00')),
PARTITION p17 VALUES LESS THAN (UNIX_TIMESTAMP('2014-01-01 00:00:00')),
PARTITION p18 VALUES LESS THAN (UNIX_TIMESTAMP('2015-01-01 00:00:00')),
PARTITION p19 VALUES LESS THAN (UNIX_TIMESTAMP('2016-01-01 00:00:00')),
PARTITION p20 VALUES LESS THAN (UNIX_TIMESTAMP('2017-01-01 00:00:00')),
PARTITION p21 VALUES LESS THAN (UNIX_TIMESTAMP('2018-01-01 00:00:00')),
PARTITION p22 VALUES LESS THAN (UNIX_TIMESTAMP('2019-01-01 00:00:00')),
PARTITION p23 VALUES LESS THAN (UNIX_TIMESTAMP('2020-01-01 00:00:00')),
PARTITION p24 VALUES LESS THAN (UNIX_TIMESTAMP('2021-01-01 00:00:00')),
PARTITION p25 VALUES LESS THAN (UNIX_TIMESTAMP('2022-01-01 00:00:00')),
PARTITION p26 VALUES LESS THAN (UNIX_TIMESTAMP('2023-01-01 00:00:00')),
PARTITION p27 VALUES LESS THAN (UNIX_TIMESTAMP('2024-01-01 00:00:00')),
PARTITION p28 VALUES LESS THAN (UNIX_TIMESTAMP('2025-01-01 00:00:00')),
PARTITION p29 VALUES LESS THAN (UNIX_TIMESTAMP('2026-01-01 00:00:00')),
PARTITION p30 VALUES LESS THAN (UNIX_TIMESTAMP('2027-01-01 00:00:00')),
PARTITION p31 VALUES LESS THAN (UNIX_TIMESTAMP('2028-01-01 00:00:00')),
PARTITION p32 VALUES LESS THAN (UNIX_TIMESTAMP('2029-01-01 00:00:00')),
PARTITION p33 VALUES LESS THAN (UNIX_TIMESTAMP('2030-01-01 00:00:00')),
PARTITION p34 VALUES LESS THAN (UNIX_TIMESTAMP('2031-01-01 00:00:00')),
PARTITION p35 VALUES LESS THAN (UNIX_TIMESTAMP('2032-01-01 00:00:00')),
PARTITION p36 VALUES LESS THAN (UNIX_TIMESTAMP('2033-01-01 00:00:00')),
PARTITION p37 VALUES LESS THAN (UNIX_TIMESTAMP('2034-01-01 00:00:00')),
PARTITION p38 VALUES LESS THAN (UNIX_TIMESTAMP('2035-01-01 00:00:00')),
PARTITION p39 VALUES LESS THAN (UNIX_TIMESTAMP('2036-01-01 00:00:00')),
PARTITION p40 VALUES LESS THAN (UNIX_TIMESTAMP('2037-01-01 00:00:00')),
PARTITION p41 VALUES LESS THAN (UNIX_TIMESTAMP('2038-01-01 00:00:00')),
PARTITION p99 VALUES LESS THAN (MAXVALUE)
);

create table profit_and_loss_nf (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	pl01 double,
	pl02 double,
	pl03 double,
	pl04 double,
	pl05 double,
	pl06 double,
	pl07 double,
	pl08 double,
	pl09 double,
	pl10 double,
	pl11 double,
	pl12 double,
	pl13 double,
	pl14 double,
	pl15 double,
	pl16 double,
	pl17 double,
	pl18 double,
	pl19 double,
	pl20 double,
	pl21 double,
	pl22 double,
	pl23 double,
	pl24 double,
	pl25 double,
	pl26 double,
	pl27 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table profit_and_loss_f (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	pl01 double,
	pl02 double,
	pl03 double,
	pl04 double,
	pl05 double,
	pl06 double,
	pl07 double,
	pl08 double,
	pl09 double,
	pl10 double,
	pl11 double,
	pl12 double,
	pl13 double,
	pl14 double,
	pl15 double,
	pl16 double,
	pl17 double,
	pl18 double,
	pl19 double,
	pl20 double,
	pl21 double,
	pl22 double,
	pl23 double,
	pl24 double,
	pl25 double,
	pl26 double,
	pl27 double,
	pl28 double,
	pl29 double,
	pl30 double,
	pl31 double,
	pl32 double,
	pl33 double,
	pl34 double,
	pl35 double,
	pl36 double,
	pl37 double,
	pl38 double,
	pl39 double,
	pl40 double,
	pl41 double,
	pl42 double,
	pl43 double,
	pl44 double,
	pl45 double,
	pl46 double,
	pl47 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table balance_sheet_nf (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	bs01 double,
	bs02 double,
	bs03 double,
	bs04 double,
	bs05 double,
	bs06 double,
	bs07 double,
	bs08 double,
	bs09 double,
	bs10 double,
	bs11 double,
	bs12 double,
	bs13 double,
	bs14 double,
	bs15 double,
	bs16 double,
	bs17 double,
	bs18 double,
	bs19 double,
	bs20 double,
	bs21 double,
	bs22 double,
	bs23 double,
	bs24 double,
	bs25 double,
	bs26 double,
	bs27 double,
	bs28 double,
	bs29 double,
	bs30 double,
	bs31 double,
	bs32 double,
	bs33 double,
	bs34 double,
	bs35 double,
	bs36 double,
	bs37 double,
	bs38 double,
	bs39 double,
	bs40 double,
	bs41 double,
	bs42 double,
	bs43 double,
	bs44 double,
	bs45 double,
	bs46 double,
	bs47 double,
	bs48 double,
	bs49 double,
	bs50 double,
	bs51 double,
	bs52 double,
	bs53 double,
	bs54 double,
	bs55 double,
	bs56 double,
	bs57 double,
	bs58 double,
	bs59 double,
	bs60 double,
	bs61 double,
	bs62 double,
	bs63 double,
	bs64 double,
	bs65 double,
	bs66 double,
	bs67 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table balance_sheet_f (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	bs01 double,
	bs02 double,
	bs03 double,
	bs04 double,
	bs05 double,
	bs06 double,
	bs07 double,
	bs08 double,
	bs09 double,
	bs10 double,
	bs11 double,
	bs12 double,
	bs13 double,
	bs14 double,
	bs15 double,
	bs16 double,
	bs17 double,
	bs18 double,
	bs19 double,
	bs20 double,
	bs21 double,
	bs22 double,
	bs23 double,
	bs24 double,
	bs25 double,
	bs26 double,
	bs27 double,
	bs28 double,
	bs29 double,
	bs30 double,
	bs31 double,
	bs32 double,
	bs33 double,
	bs34 double,
	bs35 double,
	bs36 double,
	bs37 double,
	bs38 double,
	bs39 double,
	bs40 double,
	bs41 double,
	bs42 double,
	bs43 double,
	bs44 double,
	bs45 double,
	bs46 double,
	bs47 double,
	bs48 double,
	bs49 double,
	bs50 double,
	bs51 double,
	bs52 double,
	bs53 double,
	bs54 double,
	bs55 double,
	bs56 double,
	bs57 double,
	bs58 double,
	bs59 double,
	bs60 double,
	bs61 double,
	bs62 double,
	bs63 double,
	bs64 double,
	bs65 double,
	bs66 double,
	bs67 double,
	bs68 double,
	bs69 double,
	bs70 double,
	bs71 double,
	bs72 double,
	bs73 double,
	bs74 double,
	bs75 double,
	bs76 double,
	bs77 double,
	bs78 double,
	bs79 double,
	bs80 double,
	bs81 double,
	bs82 double,
	bs83 double,
	bs84 double,
	bs85 double,
	bs86 double,
	bs87 double,
	bs88 double,
	bs89 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table cash_flow_nf (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	cf01 double,
	cf02 double,
	cf03 double,
	cf04 double,
	cf05 double,
	cf06 double,
	cf07 double,
	cf08 double,
	cf09 double,
	cf10 double,
	cf11 double,
	cf12 double,
	cf13 double,
	cf14 double,
	cf15 double,
	cf16 double,
	cf17 double,
	cf18 double,
	cf19 double,
	cf20 double,
	cf21 double,
	cf22 double,
	cf23 double,
	cf24 double,
	cf25 double,
	cf26 double,
	cf27 double,
	cf28 double,
	cf29 double,
	cf30 double,
	cf31 double,
	cf32 double,
	cf33 double,
	cf34 double,
	cf35 double,
	cf36 double,
	cf37 double,
	cf38 double,
	cf39 double,
	cf40 double,
	cf41 double,
	cf42 double,
	cf43 double,
	cf44 double,
	cf45 double,
	cf46 double,
	cf47 double,
	cf48 double,
	cf49 double,
	cf50 double,
	cf51 double,
	cf52 double,
	cf53 double,
	cf54 double,
	cf55 double,
	cf56 double,
	cf57 double,
	cf58 double,
	cf59 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table cash_flow_f (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	cf01 double,
	cf02 double,
	cf03 double,
	cf04 double,
	cf05 double,
	cf06 double,
	cf07 double,
	cf08 double,
	cf09 double,
	cf10 double,
	cf11 double,
	cf12 double,
	cf13 double,
	cf14 double,
	cf15 double,
	cf16 double,
	cf17 double,
	cf18 double,
	cf19 double,
	cf20 double,
	cf21 double,
	cf22 double,
	cf23 double,
	cf24 double,
	cf25 double,
	cf26 double,
	cf27 double,
	cf28 double,
	cf29 double,
	cf30 double,
	cf31 double,
	cf32 double,
	cf33 double,
	cf34 double,
	cf35 double,
	cf36 double,
	cf37 double,
	cf38 double,
	cf39 double,
	cf40 double,
	cf41 double,
	cf42 double,
	cf43 double,
	cf44 double,
	cf45 double,
	cf46 double,
	cf47 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table provision (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	pv01 double,
	pv02 double,
	pv03 double,
	pv04 double,
	pv05 double,
	pv06 double,
	pv07 double,
	pv08 double,
	pv09 double,
	pv10 double,
	pv11 double,
	pv12 double,
	pv13 double,
	pv14 double,
	pv15 double,
	pv16 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table profit_and_loss_single_season_nf (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	pl01 double,
	pl02 double,
	pl03 double,
	pl04 double,
	pl05 double,
	pl06 double,
	pl07 double,
	pl08 double,
	pl09 double,
	pl10 double,
	pl11 double,
	pl12 double,
	pl13 double,
	pl14 double,
	pl15 double,
	pl16 double,
	pl17 double,
	pl18 double,
	pl19 double,
	pl20 double,
	pl21 double,
	pl22 double,
	pl23 double,
	pl24 double,
	pl25 double,
	pl26 double,
	pl27 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table profit_and_loss_single_season_f (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	pl01 double,
	pl02 double,
	pl03 double,
	pl04 double,
	pl05 double,
	pl06 double,
	pl07 double,
	pl08 double,
	pl09 double,
	pl10 double,
	pl11 double,
	pl12 double,
	pl13 double,
	pl14 double,
	pl15 double,
	pl16 double,
	pl17 double,
	pl18 double,
	pl19 double,
	pl20 double,
	pl21 double,
	pl22 double,
	pl23 double,
	pl24 double,
	pl25 double,
	pl26 double,
	pl27 double,
	pl28 double,
	pl29 double,
	pl30 double,
	pl31 double,
	pl32 double,
	pl33 double,
	pl34 double,
	pl35 double,
	pl36 double,
	pl37 double,
	pl38 double,
	pl39 double,
	pl40 double,
	pl41 double,
	pl42 double,
	pl43 double,
	pl44 double,
	pl45 double,
	pl46 double,
	pl47 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table cash_flow_single_season_nf (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	cf01 double,
	cf02 double,
	cf03 double,
	cf04 double,
	cf05 double,
	cf06 double,
	cf07 double,
	cf08 double,
	cf09 double,
	cf10 double,
	cf11 double,
	cf12 double,
	cf13 double,
	cf14 double,
	cf15 double,
	cf16 double,
	cf17 double,
	cf18 double,
	cf19 double,
	cf20 double,
	cf21 double,
	cf22 double,
	cf23 double,
	cf24 double,
	cf25 double,
	cf26 double,
	cf27 double,
	cf28 double,
	cf29 double,
	cf30 double,
	cf31 double,
	cf32 double,
	cf33 double,
	cf34 double,
	cf35 double,
	cf36 double,
	cf37 double,
	cf38 double,
	cf39 double,
	cf40 double,
	cf41 double,
	cf42 double,
	cf43 double,
	cf44 double,
	cf45 double,
	cf46 double,
	cf47 double,
	cf48 double,
	cf49 double,
	cf50 double,
	cf51 double,
	cf52 double,
	cf53 double,
	cf54 double,
	cf55 double,
	cf56 double,
	cf57 double,
	cf58 double,
	cf59 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

create table cash_flow_single_season_f (
	id INT UNSIGNED AUTO_INCREMENT,
	stock_id INT UNSIGNED,
	fin_year MEDIUMINT UNSIGNED,
	fin_season TINYINT UNSIGNED,
	cf01 double,
	cf02 double,
	cf03 double,
	cf04 double,
	cf05 double,
	cf06 double,
	cf07 double,
	cf08 double,
	cf09 double,
	cf10 double,
	cf11 double,
	cf12 double,
	cf13 double,
	cf14 double,
	cf15 double,
	cf16 double,
	cf17 double,
	cf18 double,
	cf19 double,
	cf20 double,
	cf21 double,
	cf22 double,
	cf23 double,
	cf24 double,
	cf25 double,
	cf26 double,
	cf27 double,
	cf28 double,
	cf29 double,
	cf30 double,
	cf31 double,
	cf32 double,
	cf33 double,
	cf34 double,
	cf35 double,
	cf36 double,
	cf37 double,
	cf38 double,
	cf39 double,
	cf40 double,
	cf41 double,
	cf42 double,
	cf43 double,
	cf44 double,
	cf45 double,
	cf46 double,
	cf47 double,
	primary key (id),
	foreign key (stock_id) references stock(id),
	unique (stock_id, fin_year, fin_season)
);

INSERT INTO analysis_field (name, description) VALUES ('Seasonal GI', 'Gross Income of a single season');
INSERT INTO analysis_field (name, description) VALUES ('Seasonal GI YonY Growth', 'Single-season gross income"s year-on-year growth');
INSERT INTO analysis_field (name, description) VALUES ('Seasonal GI SoS Growth', 'Single-season gross income"s season-on-season growth');
INSERT INTO analysis_field (name, description) VALUES ('Y2D GI YoY Growth', 'Year-to-date gross income"s year-on-year growth');
INSERT INTO analysis_field (name, description) VALUES ('Seasonal OC', 'Operating cost of a single season');
INSERT INTO analysis_field (name, description) VALUES ('Y2D PM', 'Year-to-date profit margin');
INSERT INTO analysis_field (name, description) VALUES ('Seasonal PM', 'Single-season profit margin');
INSERT INTO analysis_field (name, description) VALUES ('Seasonal PM SoS Delta', 'Season-on-season delta of single-season profit margin');

-- INSERT INTO fin_sheet (name) VALUES ('balance');
-- INSERT INTO fin_sheet (name) VALUES ('profit&loss');
-- INSERT INTO fin_sheet (name) VALUES ('cashflow');

-- INSERT INTO fin_period (name, annual) VALUE ('1992.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('1993.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('1994.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('1995.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('1996.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('1997.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('1998.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('1999.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2000.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2001.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2002.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2003.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2004.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2005.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2006.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2007.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2008.12', true);
-- INSERT INTO fin_period (name, annual) VALUE ('2009.12', true);

-- INSERT INTO fin_period (name, annual) VALUE ('2010.03', false);
-- INSERT INTO fin_period (name, annual) VALUE ('2010.06', false);
-- INSERT INTO fin_period (name, annual) VALUE ('2010.09', false);
-- INSERT INTO fin_period (name, annual) VALUE ('2010.12', true);

-- INSERT INTO source (name, url) VALUES ('hexun2008', 'http://stockdata.stock.hexun.com/2008/[fin_sheet].aspx?stockid=[stock]&accountdate=[fin_period]');
-- INSERT INTO source_fin_sheet (source_id, fin_sheet_id, text_pattern) VALUES (1,1, 'zcfz');
-- INSERT INTO source_fin_sheet (source_id, fin_sheet_id, text_pattern) VALUES (1,2, 'lr');
-- INSERT INTO source_fin_sheet (source_id, fin_sheet_id, text_pattern) VALUES (1,3, 'xjll');
select name, code, fin_year, c from stock s, (select count(*) c, stock_id, fin_year from report_pub_dates group by stock_id, fin_year having (fin_year >= 2002 and fin_year < 2012 and c < 4)) cnt where cnt.stock_id = s.id order by code, fin_year;

select name, code, fin_year, c from stock s, (select count(*) c, stock_id, fin_year from report_pub_dates group by stock_id, fin_year having (fin_year < 2002 and c < 2)) cnt where cnt.stock_id = s.id order by code, fin_year;